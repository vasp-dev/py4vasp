name: test-full

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] #, macos-latest, windows-latest]
        python-version: ["3.8"] #, "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        # activate-environment: py4vasp
    - name: Install dependencies with conda
      run: |
        conda info
        conda install -c conda-forge mdtraj
    - name: Install dependencies
      shell: bash -el {0}
      run: |
        conda activate test
        conda env list
        which python
        python --version
        python -m pip install --upgrade pip
        pip install "poetry!=1.4.1"
        poetry --version
        poetry config virtualenvs.create false --local
        poetry install
        conda list
    - name: Test with pytest
      run: |
        conda activate test
        conda env list
        conda list
        which pytest
        poetry run pytest --version
        poetry run pytest --cov=py4vasp --cov-report term
    - name: Check code style
      run: |
        poetry run isort --version
        poetry run isort --check src
        poetry run isort --check tests
        poetry run black --version
        poetry run black --check src
        poetry run black --check tests

